// -------------------------------------------------------------
// 
// File Name: hdlsrc/cic_test_mdl/loop_filter.v
// Created: 2015-05-05 00:24:25
// 
// Generated by MATLAB 8.1 and HDL Coder 3.2
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Model base rate: 1.6e-09
// Target subsystem base rate: 2.56e-08
// 
// 
// Clock Enable  Sample Time
// -- -------------------------------------------------------------
// ceout         2.56e-08
// -- -------------------------------------------------------------
// 
// 
// Output Signal                 Clock Enable  Sample Time
// -- -------------------------------------------------------------
// filter_out                    ceout         2.56e-08
// -- -------------------------------------------------------------
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: loop_filter
// Source Path: cic_test_mdl/loop_filter
// Hierarchy Level: 0
// 
// -------------------------------------------------------------



module loop_filter
          (
           clk,
           rstn,
           enable,
           filter_in,
           ceout,
           filter_out,
           a2,a3,b1,b2
          );


  input   clk;
  input   rstn;
  input   enable;
  input   signed [15:0] filter_in;  // sfix16_En15
  input signed [15:0] a2;
  input signed [15:0] a3;
  input signed [15:0] b1;
  input signed [15:0] b2;
  output  ceout;
  output  signed [15:0] filter_out;  // sfix16_En15


  wire enb_1_16_0;
  wire signed [31:0] b_1_mul_temp;  // sfix32_En28
  wire signed [24:0] b_1_out1;  // sfix25_En24
  wire signed [31:0] b_2_mul_temp;  // sfix32_En28
  wire signed [24:0] b_2_out1;  // sfix25_En24
  wire signed [15:0] CastCAS_out1;  // sfix16_En15
  wire signed [31:0] a_2_mul_temp;  // sfix32_En29
  wire signed [24:0] a_2_out1;  // sfix25_En22
  wire signed [31:0] a_3_mul_temp;  // sfix32_En29
  wire signed [24:0] a_3_out1;  // sfix25_En22
  wire signed [15:0] CastStates3_out1;  // sfix16_En11
  reg signed [15:0] BodyDelay3_out1;  // sfix16_En11
  wire signed [34:0] BodyLSum2_sub_cast;  // sfix35_En29
  wire signed [34:0] BodyLSum2_sub_cast_1;  // sfix35_En29
  wire signed [34:0] BodyLSum2_sub_temp;  // sfix35_En29
  wire signed [24:0] BodyLSum2_out1;  // sfix25_En20
  wire signed [34:0] BodyRSum2_sub_cast;  // sfix35_En29
  wire signed [34:0] BodyRSum2_sub_cast_1;  // sfix35_En29
  wire signed [34:0] BodyRSum2_sub_temp;  // sfix35_En29
  wire signed [24:0] BodyRSum2_out1;  // sfix25_En20
  wire signed [15:0] CastStates2_out1;  // sfix16_En11
  reg signed [15:0] BodyDelay2_out1;  // sfix16_En11
  wire signed [34:0] HeadSum1_add_cast;  // sfix35_En29
  wire signed [34:0] HeadSum1_add_cast_1;  // sfix35_En29
  wire signed [34:0] HeadSum1_add_temp;  // sfix35_En29
  wire signed [24:0] HeadSum1_out1;  // sfix25_En20


  assign b_1_mul_temp = b1 * filter_in;
  assign b_1_out1 = ((b_1_mul_temp[31] == 1'b0) && (b_1_mul_temp[30:28] != 3'b000) ? 25'sb0111111111111111111111111 :
              ((b_1_mul_temp[31] == 1'b1) && (b_1_mul_temp[30:28] != 3'b111) ? 25'sb1000000000000000000000000 :
              $signed(b_1_mul_temp[28:4])));



  assign b_2_mul_temp = b2 * filter_in;
  assign b_2_out1 = ((b_2_mul_temp[31] == 1'b0) && (b_2_mul_temp[30:28] != 3'b000) ? 25'sb0111111111111111111111111 :
              ((b_2_mul_temp[31] == 1'b1) && (b_2_mul_temp[30:28] != 3'b111) ? 25'sb1000000000000000000000000 :
              $signed(b_2_mul_temp[28:4])));



  assign enb_1_16_0 = enable;

  assign a_2_mul_temp = a2 * CastCAS_out1;
  assign a_2_out1 = ((a_2_mul_temp[31] == 1'b0) && (a_2_mul_temp[30:7] == 24'b111111111111111111111111) ? 25'sb0111111111111111111111111 :
              $signed(a_2_mul_temp[31:7]));



  assign a_3_mul_temp = a3 * CastCAS_out1;
  assign a_3_out1 = ((a_3_mul_temp[31] == 1'b0) && (a_3_mul_temp[30:7] == 24'b111111111111111111111111) ? 25'sb0111111111111111111111111 :
              $signed(a_3_mul_temp[31:7]));



  assign CastStates3_out1 = {{2{a_3_out1[24]}}, a_3_out1[24:11]};



  always @(posedge clk or negedge rstn)
    begin : BodyDelay3_process
      if (rstn == 1'b0) begin
        BodyDelay3_out1 <= 16'sb0000000000000000;
      end
      else begin
        if (enb_1_16_0) begin
          BodyDelay3_out1 <= CastStates3_out1;
        end
      end
    end



  assign BodyLSum2_sub_cast = {{5{b_2_out1[24]}}, {b_2_out1, 5'b00000}};
  assign BodyLSum2_sub_cast_1 = {BodyDelay3_out1[15], {BodyDelay3_out1, 18'b000000000000000000}};
  assign BodyLSum2_sub_temp = BodyLSum2_sub_cast - BodyLSum2_sub_cast_1;
  assign BodyLSum2_out1 = ((BodyLSum2_sub_temp[34] == 1'b0) && (BodyLSum2_sub_temp[33] != 1'b0) ? 25'sb0111111111111111111111111 :
              ((BodyLSum2_sub_temp[34] == 1'b1) && (BodyLSum2_sub_temp[33] != 1'b1) ? 25'sb1000000000000000000000000 :
              $signed(BodyLSum2_sub_temp[33:9])));



  assign BodyRSum2_sub_cast = {BodyLSum2_out1[24], {BodyLSum2_out1, 9'b000000000}};
  assign BodyRSum2_sub_cast_1 = {{3{a_2_out1[24]}}, {a_2_out1, 7'b0000000}};
  assign BodyRSum2_sub_temp = BodyRSum2_sub_cast - BodyRSum2_sub_cast_1;
  assign BodyRSum2_out1 = ((BodyRSum2_sub_temp[34] == 1'b0) && (BodyRSum2_sub_temp[33] != 1'b0) ? 25'sb0111111111111111111111111 :
              ((BodyRSum2_sub_temp[34] == 1'b1) && (BodyRSum2_sub_temp[33] != 1'b1) ? 25'sb1000000000000000000000000 :
              $signed(BodyRSum2_sub_temp[33:9])));



  assign CastStates2_out1 = ((BodyRSum2_out1[24] == 1'b0) && (BodyRSum2_out1[23:9] == 15'b111111111111111) ? 16'sb0111111111111111 :
              $signed(BodyRSum2_out1[24:9]));



  always @(posedge clk or negedge rstn)
    begin : BodyDelay2_process
      if (rstn == 1'b0) begin
        BodyDelay2_out1 <= 16'sb0000000000000000;
      end
      else begin
        if (enb_1_16_0) begin
          BodyDelay2_out1 <= CastStates2_out1;
        end
      end
    end



  assign HeadSum1_add_cast = {{5{b_1_out1[24]}}, {b_1_out1, 5'b00000}};
  assign HeadSum1_add_cast_1 = {BodyDelay2_out1[15], {BodyDelay2_out1, 18'b000000000000000000}};
  assign HeadSum1_add_temp = HeadSum1_add_cast + HeadSum1_add_cast_1;
  assign HeadSum1_out1 = ((HeadSum1_add_temp[34] == 1'b0) && (HeadSum1_add_temp[33] != 1'b0) ? 25'sb0111111111111111111111111 :
              ((HeadSum1_add_temp[34] == 1'b1) && (HeadSum1_add_temp[33] != 1'b1) ? 25'sb1000000000000000000000000 :
              $signed(HeadSum1_add_temp[33:9])));



  assign CastCAS_out1 = ((HeadSum1_out1[24] == 1'b0) && (HeadSum1_out1[23:20] != 4'b0000) ? 16'sb0111111111111111 :
              ((HeadSum1_out1[24] == 1'b1) && (HeadSum1_out1[23:20] != 4'b1111) ? 16'sb1000000000000000 :
              $signed(HeadSum1_out1[20:5])));



  assign filter_out = CastCAS_out1;

  assign ceout = enable;

endmodule  // loop_filter

